To match a 10-digit number that does not start with `0`, you can use the following regular expression:

```
^[1-9]\d{9}$
```

### Explanation:
- `^` asserts the position at the start of the line.
- `[1-9]` matches any digit from 1 to 9 (ensures the number does not start with 0).
- `\d{9}` matches exactly 9 digits (`\d` represents any digit, and `{9}` specifies that it should appear exactly 9 times).
- `$` asserts the position at the end of the line.

This regex will match any 10-digit number as long as the first digit is not 0.

To match a valid birthday in the format `yyyymmdd` where:

- The year starts with `19` or `20` (e.g., `1900`-`2099`)
- The month is valid (01-12)
- The day is valid depending on the month (e.g., 01-31 for months with 31 days, etc.)

You can use the following regular expression:

```
^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[01])$
```

### Explanation:
1. **Year part:**
   - `(19[0-9]{2}|20[0-9]{2})`: Matches years from `1900` to `2099`.
   - `19[0-9]{2}`: Matches any year from `1900` to `1999`.
   - `20[0-9]{2}`: Matches any year from `2000` to `2099`.

2. **Month part:**
   - `(0[1-9]|1[0-2])`: Matches months from `01` to `12`.
   - `0[1-9]`: Matches months `01` to `09`.
   - `1[0-2]`: Matches months `10` to `12`.

3. **Day part:**
   - `(0[1-9]|1[0-9]|2[0-9]|3[01])`: Matches days from `01` to `31`.
   - `0[1-9]`: Matches days `01` to `09`.
   - `1[0-9]`: Matches days `10` to `19`.
   - `2[0-9]`: Matches days `20` to `29`.
   - `3[01]`: Matches days `30` or `31`.

### Notes:
- This regex assumes a simplified validation and does not account for months with fewer days (e.g., February with 28/29 days). For more precise validation, you'd typically handle such cases programmatically in addition to this regex.

This regex ensures that only strings with the exact `yyyymmdd` format are matched, and it checks that the year is within the specified range, and the month and day parts are valid.
